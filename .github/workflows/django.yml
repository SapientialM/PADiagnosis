name: 肺炎诊断系统 CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 缓存 pip 依赖
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: 安装系统依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libmysqlclient-dev \
          pkg-config \
          default-libmysqlclient-dev \
          build-essential
    
    - name: 升级 pip
      run: |
        python -m pip install --upgrade pip
    
    - name: 安装 Python 依赖
      run: |
        pip install -r requirements.txt
        pip install coverage pytest-django pytest-cov
    
    - name: 等待 MySQL 启动
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P3306 -u test_user -ptest_password --silent; do
          echo "等待 MySQL..."
          sleep 1
        done
        echo "MySQL 已就绪"
    
    - name: 设置环境变量
      run: |
        echo "DJANGO_SETTINGS_MODULE=Demo.settings_test" >> $GITHUB_ENV
        echo "DATABASE_URL=mysql://test_user:test_password@127.0.0.1:3306/test_db" >> $GITHUB_ENV
        echo "REDIS_URL=redis://127.0.0.1:6379/0" >> $GITHUB_ENV
    
    - name: 检查代码风格
      run: |
        python -m pip install flake8
        # 停止构建如果有语法错误或未定义的变量
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # 退出代码为零视为成功，GitHub编辑器默认行长度为127个字符
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: 运行数据库迁移
      run: |
        python manage.py makemigrations --dry-run --check
        python manage.py migrate
    
    - name: 收集静态文件
      run: |
        python manage.py collectstatic --noinput
    
    - name: 运行测试
      run: |
        coverage run --source='.' manage.py test
        coverage report
        coverage xml
    
    - name: 上传覆盖率报告到 Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
